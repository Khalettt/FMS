generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt    @id @default(autoincrement())
  fullname    String    @db.VarChar(100)
  username    String    @unique @db.VarChar(50)
  email       String    @unique @db.VarChar(100)
  password    String
  image_photo String?
  phone       String?   // Added this for phone number
  address     String?   // Added this for address
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  farmers     Farmer[]

  @@map("users")
}

model Farmer {
  id          BigInt    @id @default(autoincrement())
  user_id     BigInt
  user        User      @relation(fields: [user_id], references: [id])
  full_name   String
  gender      String    @db.Text
  phone       String?
  email       String?
  address     String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  farms       Farm[]

  @@map("farmers")
}

model Farm {
  id              BigInt    @id @default(autoincrement())
  farmer_id       BigInt
  farmer          Farmer?   @relation(fields: [farmer_id], references: [id], onDelete: Cascade) // FIX Halkan: WAA INUU NOQDAA OPTIONAL
  name            String    @unique
  location        String?
  size_acres      Float?
  irrigation      Boolean?  @default(false)
  gps_coordinates String?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  crops           Crop[]
  equipment       Equipment[]
  sales           Sale[]

  @@map("farms")
}

model Crop {
  id                    BigInt    @id @default(autoincrement())
  farm_id               BigInt
  farm                  Farm      @relation(fields: [farm_id], references: [id], onDelete: Cascade)
  name                  String
  variety               String?
  planting_date         DateTime?
  expected_harvest_date DateTime?
  status                String    @db.Text @default("planted")
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  fertilizations        Fertilization[]
  @@map("crops")
}

model Equipment {
  id             BigInt    @id @default(autoincrement())
  farm_id        BigInt
  farm           Farm      @relation(fields: [farm_id], references: [id], onDelete: Cascade)
  name           String
  purchase_date  DateTime?
  condition      String    @db.Text
  is_operational Boolean   @default(true)
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  @@map("equipment")
}

model Sale {
  id              BigInt    @id @default(autoincrement())
  farm_id         BigInt
  farm            Farm      @relation(fields: [farm_id], references: [id], onDelete: Cascade)
  product_type    String
  product_name    String?
  quantity        Decimal?  @db.Decimal(10, 2)
  unit            String?   @default("kg")
  price_per_unit  Decimal?  @db.Decimal(10, 2)
  sale_date       DateTime? @db.Date
  buyer_name      String?
  total_revenue   Decimal?  @db.Decimal(10, 2) @default(dbgenerated("(quantity * price_per_unit)"))
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt

  @@map("sales")
}

model Fertilization {
  id         BigInt    @id @default(autoincrement())
  crop       Crop      @relation(fields: [cropId], references: [id], onDelete: Cascade)
  cropId     BigInt    @map("crop_id")
  date       DateTime
  type       String?
  quantityKg Decimal?  @map("quantity_kg") @db.Decimal(10, 2)
  createdAt  DateTime  @default(now()) @map("created_at")
  updated_at DateTime  @updatedAt

  @@map("fertilization")
}
